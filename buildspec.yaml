version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto8
  pre_build:
      commands:
        # clone the manifests
        # new changes 2
        #- chmod u+x pull.sh && chmod u+x push.sh
        #- ./pull.sh $GITHUB_REPO $GITHUB_USER $GITHUB_EMAIL $BUCKET_S3
        - echo "clean and package the project"
        - mvn clean package
        - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        - sed -i 's@'$ECR_REPO_URI.*'@'$ECR_REPO_URI:$IMAGE_TAG'@'  manifest/deployment_service.yaml
        # Login to ECR Registry for docker to push the image to ECR Repository
        - echo "Login in to Amazon ECR..."
        - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
        # Update Kube config Home Directory
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      # Build Docker Image
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t $ECR_REPO_URI:$IMAGE_TAG .
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $ECR_REPO_URI:$IMAGE_TAG
      - echo "Docker Image Push to ECR Completed"    

      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      # Setup kubectl with our EKS Cluster              
      - echo "Update Kube Config"    
      #- echo $masterrolearn
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_DEFAULT_REGION --role-arn $masterrolearn
      - echo "Apply changes to kube manifests"
      - kubectl apply -f manifest/deployment_service.yaml
      # push the changes to the github repo
      #- ./push.sh
      - echo "Completed applying changes to Kubernetes Objects"           
      # Create Artifacts which we can use if we want to continue our pipeline for other stages
      #- printf '[{"name":"01-DEVOPS-Nginx-Deployment.yml","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
                
artifacts:
  files: 
    - target/demo-0.0.1-SNAPSHOT.jar   
   